<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<!--spring的配置文件：這裡主要配置和業務邏輯有關的 -->
	<!-- needed for ContextLoaderListener -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- Bootstraps the root web application context before servlet initialization -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!--springmvc的前端控制器 -->
	<!-- The front controller of this Spring Web application, responsible for 
		handling all application requests -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 字符編碼過濾器,當過濾器有多個的時候，這時候就會有優先級，所以此時因該把字符編碼放到最前面 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!--配置REST風格的過濾器  -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 
		用sessionFactory.getCurrentSession()会进行自动关闭session不像opensession需要手动关闭 
		这样会造成页面卡死，但是spring4+hibernate4需要加监听，加了之后就能通过sessionFactory.getCurrentSession() 
		获取session 
	-->
	<!-- <filter>
			<filter-name>SpringOpenSessionInViewFilter</filter-name>
			<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>SpringOpenSessionInViewFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping> -->
	<!-- 配置put通过请求 -->
		<filter>
			<filter-name>HttpPutFormContentFilter</filter-name>
			<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>HttpPutFormContentFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>
</web-app>